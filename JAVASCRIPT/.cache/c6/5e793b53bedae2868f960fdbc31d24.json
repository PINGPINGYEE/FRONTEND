{"id":"RegExpTheory/regExpMethod.js","dependencies":[{"name":"C:\\Users\\Owner\\Desktop\\CODING\\FRONTEND-STUDY\\JAVASCRIPT\\package.json","includedInParent":true,"mtime":1707375436169}],"generated":{"js":"var str = \"\\n010-1234-5678\\ntheabcdef@abc.com\\nhttps://www.omdbapi.com/?apikey=7035c60c&s=frozen\\nThe quick brown fox jumps over the lazy dog.\\nabbcccddd\\n\";\n\n// 생성자 방식\n// const regexp = new RegExp('the', 'gi')\n\n// 리터럴 방식\nvar regexp = /fox/gi;\nvar regexp2 = /hi/gi;\nconsole.log(regexp.test(str));\nconsole.log(regexp2.test(str));\nstr = str.replace(regexp, 'AAA');\nconsole.log(str);"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"RegExpTheory/regExpMethod.js","original":{"line":1,"column":0}},{"generated":{"line":1,"column":4},"source":"RegExpTheory/regExpMethod.js","original":{"line":1,"column":4},"name":"str"},{"generated":{"line":1,"column":7},"source":"RegExpTheory/regExpMethod.js","original":{"line":1,"column":7}},{"generated":{"line":1,"column":156},"source":"RegExpTheory/regExpMethod.js","original":{"line":7,"column":1}},{"generated":{"line":3,"column":0},"source":"RegExpTheory/regExpMethod.js","original":{"line":9,"column":0}},{"generated":{"line":4,"column":0},"source":"RegExpTheory/regExpMethod.js","original":{"line":10,"column":0}},{"generated":{"line":6,"column":0},"source":"RegExpTheory/regExpMethod.js","original":{"line":12,"column":0}},{"generated":{"line":7,"column":0},"source":"RegExpTheory/regExpMethod.js","original":{"line":13,"column":0}},{"generated":{"line":7,"column":4},"source":"RegExpTheory/regExpMethod.js","original":{"line":13,"column":6},"name":"regexp"},{"generated":{"line":7,"column":10},"source":"RegExpTheory/regExpMethod.js","original":{"line":13,"column":12}},{"generated":{"line":7,"column":13},"source":"RegExpTheory/regExpMethod.js","original":{"line":13,"column":15}},{"generated":{"line":7,"column":20},"source":"RegExpTheory/regExpMethod.js","original":{"line":13,"column":22}},{"generated":{"line":8,"column":0},"source":"RegExpTheory/regExpMethod.js","original":{"line":14,"column":0}},{"generated":{"line":8,"column":4},"source":"RegExpTheory/regExpMethod.js","original":{"line":14,"column":6},"name":"regexp2"},{"generated":{"line":8,"column":11},"source":"RegExpTheory/regExpMethod.js","original":{"line":14,"column":13}},{"generated":{"line":8,"column":14},"source":"RegExpTheory/regExpMethod.js","original":{"line":14,"column":16}},{"generated":{"line":8,"column":20},"source":"RegExpTheory/regExpMethod.js","original":{"line":14,"column":22}},{"generated":{"line":9,"column":0},"source":"RegExpTheory/regExpMethod.js","original":{"line":15,"column":0},"name":"console"},{"generated":{"line":9,"column":7},"source":"RegExpTheory/regExpMethod.js","original":{"line":15,"column":7}},{"generated":{"line":9,"column":8},"source":"RegExpTheory/regExpMethod.js","original":{"line":15,"column":8},"name":"log"},{"generated":{"line":9,"column":11},"source":"RegExpTheory/regExpMethod.js","original":{"line":15,"column":11}},{"generated":{"line":9,"column":12},"source":"RegExpTheory/regExpMethod.js","original":{"line":15,"column":12},"name":"regexp"},{"generated":{"line":9,"column":18},"source":"RegExpTheory/regExpMethod.js","original":{"line":15,"column":18}},{"generated":{"line":9,"column":19},"source":"RegExpTheory/regExpMethod.js","original":{"line":15,"column":19},"name":"test"},{"generated":{"line":9,"column":23},"source":"RegExpTheory/regExpMethod.js","original":{"line":15,"column":23}},{"generated":{"line":9,"column":24},"source":"RegExpTheory/regExpMethod.js","original":{"line":15,"column":24},"name":"str"},{"generated":{"line":9,"column":27},"source":"RegExpTheory/regExpMethod.js","original":{"line":15,"column":27}},{"generated":{"line":9,"column":28},"source":"RegExpTheory/regExpMethod.js","original":{"line":15,"column":28}},{"generated":{"line":9,"column":29},"source":"RegExpTheory/regExpMethod.js","original":{"line":15,"column":29}},{"generated":{"line":10,"column":0},"source":"RegExpTheory/regExpMethod.js","original":{"line":16,"column":0},"name":"console"},{"generated":{"line":10,"column":7},"source":"RegExpTheory/regExpMethod.js","original":{"line":16,"column":7}},{"generated":{"line":10,"column":8},"source":"RegExpTheory/regExpMethod.js","original":{"line":16,"column":8},"name":"log"},{"generated":{"line":10,"column":11},"source":"RegExpTheory/regExpMethod.js","original":{"line":16,"column":11}},{"generated":{"line":10,"column":12},"source":"RegExpTheory/regExpMethod.js","original":{"line":16,"column":12},"name":"regexp2"},{"generated":{"line":10,"column":19},"source":"RegExpTheory/regExpMethod.js","original":{"line":16,"column":19}},{"generated":{"line":10,"column":20},"source":"RegExpTheory/regExpMethod.js","original":{"line":16,"column":20},"name":"test"},{"generated":{"line":10,"column":24},"source":"RegExpTheory/regExpMethod.js","original":{"line":16,"column":24}},{"generated":{"line":10,"column":25},"source":"RegExpTheory/regExpMethod.js","original":{"line":16,"column":25},"name":"str"},{"generated":{"line":10,"column":28},"source":"RegExpTheory/regExpMethod.js","original":{"line":16,"column":28}},{"generated":{"line":10,"column":29},"source":"RegExpTheory/regExpMethod.js","original":{"line":16,"column":29}},{"generated":{"line":10,"column":30},"source":"RegExpTheory/regExpMethod.js","original":{"line":16,"column":30}},{"generated":{"line":11,"column":0},"source":"RegExpTheory/regExpMethod.js","original":{"line":17,"column":0},"name":"str"},{"generated":{"line":11,"column":3},"source":"RegExpTheory/regExpMethod.js","original":{"line":17,"column":3}},{"generated":{"line":11,"column":6},"source":"RegExpTheory/regExpMethod.js","original":{"line":17,"column":6},"name":"str"},{"generated":{"line":11,"column":9},"source":"RegExpTheory/regExpMethod.js","original":{"line":17,"column":9}},{"generated":{"line":11,"column":10},"source":"RegExpTheory/regExpMethod.js","original":{"line":17,"column":10},"name":"replace"},{"generated":{"line":11,"column":17},"source":"RegExpTheory/regExpMethod.js","original":{"line":17,"column":17}},{"generated":{"line":11,"column":18},"source":"RegExpTheory/regExpMethod.js","original":{"line":17,"column":18},"name":"regexp"},{"generated":{"line":11,"column":24},"source":"RegExpTheory/regExpMethod.js","original":{"line":17,"column":24}},{"generated":{"line":11,"column":26},"source":"RegExpTheory/regExpMethod.js","original":{"line":17,"column":26}},{"generated":{"line":11,"column":31},"source":"RegExpTheory/regExpMethod.js","original":{"line":17,"column":31}},{"generated":{"line":11,"column":32},"source":"RegExpTheory/regExpMethod.js","original":{"line":17,"column":32}},{"generated":{"line":12,"column":0},"source":"RegExpTheory/regExpMethod.js","original":{"line":18,"column":0},"name":"console"},{"generated":{"line":12,"column":7},"source":"RegExpTheory/regExpMethod.js","original":{"line":18,"column":7}},{"generated":{"line":12,"column":8},"source":"RegExpTheory/regExpMethod.js","original":{"line":18,"column":8},"name":"log"},{"generated":{"line":12,"column":11},"source":"RegExpTheory/regExpMethod.js","original":{"line":18,"column":11}},{"generated":{"line":12,"column":12},"source":"RegExpTheory/regExpMethod.js","original":{"line":18,"column":12},"name":"str"},{"generated":{"line":12,"column":15},"source":"RegExpTheory/regExpMethod.js","original":{"line":18,"column":15}},{"generated":{"line":12,"column":16},"source":"RegExpTheory/regExpMethod.js","original":{"line":18,"column":16}}],"sources":{"RegExpTheory/regExpMethod.js":"let str = `\r\n010-1234-5678\r\ntheabcdef@abc.com\r\nhttps://www.omdbapi.com/?apikey=7035c60c&s=frozen\r\nThe quick brown fox jumps over the lazy dog.\r\nabbcccddd\r\n`\r\n\r\n// 생성자 방식\r\n// const regexp = new RegExp('the', 'gi')\r\n\r\n// 리터럴 방식\r\nconst regexp = /fox/gi\r\nconst regexp2 = /hi/gi\r\nconsole.log(regexp.test(str));\r\nconsole.log(regexp2.test(str));\r\nstr = str.replace(regexp, 'AAA');\r\nconsole.log(str);\r\n"},"lineCount":null}},"error":null,"hash":"da7735521f4a5d15fde7800408733f19","cacheData":{"env":{}}}