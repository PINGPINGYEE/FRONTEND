{"version":3,"sources":["RegExpTheory/regExpMethod.js"],"names":["str","regexp","regexp2","console","log","test","replace","regexp3","match","h","newStr"],"mappings":"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","file":"regExpMethod.9367c8ac.js","sourceRoot":"..","sourcesContent":["let str = `\r\n010-1234-5678\r\ntheabcdef@abc.com\r\nhttps://www.omdbapi.com/?apikey=7035c60c&s=frozen\r\nThe quick brown fox jumps over the lazy dog.\r\nabbcccdddd\r\nhttp://localhost:1234\r\n`\r\n\r\n// 생성자 방식\r\n// const regexp = new RegExp('the', 'gi')\r\n\r\n// 리터럴 방식\r\nconst regexp = /fox/gi\r\n\r\n// 플래그\r\nconst regexp2 = /hi/gi\r\nconsole.log(regexp.test(str));\r\nconsole.log(regexp2.test(str));\r\nstr = str.replace(regexp, 'AAA');\r\nconsole.log(str);\r\n\r\nconst regexp3 = /the/g\r\nconsole.log(str.match(regexp3));\r\n\r\nconsole.log(str.match(/\\.$/gim));\r\n\r\n// 패턴\r\nconsole.log(\r\n  str.match(/d$/gm)\r\n);\r\n\r\nconsole.log(\r\n  str.match(/^t/gim)\r\n);\r\n\r\nconsole.log(\r\n  str.match(/./g)\r\n);\r\n\r\nconsole.log(\r\n  str.match(/http/g)\r\n);\r\n\r\nconsole.log(\r\n  str.match(/h..p/g)\r\n);\r\n\r\nconsole.log(\r\n  str.match(/quick|dog/g)\r\n);\r\n\r\nconsole.log(\r\n  str.match(/quick|dog/) // quick만 찾음(먼저 찾아지는 것)\r\n);\r\n\r\nconsole.log(\r\n  str.match(/https?/g)\r\n);\r\n\r\nconsole.log(\r\n  str.match(/https?/g)\r\n);\r\n\r\nconsole.log(\r\n  str.match(/d{2}/g)\r\n);\r\n\r\nconsole.log(\r\n  str.match(/d{2,}/g)\r\n);\r\n\r\nconsole.log(\r\n  str.match(/\\w{2,3}/g) // \\w는 알파벳을 포함한 모든 숫자\r\n);\r\n\r\nconsole.log(\r\n  str.match(/\\b\\w{2,3}\\b/g) // \\b는 경계를 두는 것\r\n);\r\n\r\nconsole.log(\r\n  str.match(/[fow]/g)\r\n);\r\n\r\nconsole.log(\r\n  str.match(/[0-9]/g)\r\n);\r\n\r\nconsole.log(\r\n  str.match(/[0-9]{1,}/g)\r\n);\r\n\r\nconsole.log(\r\n  str.match(/\\w/g)\r\n);\r\n\r\nconsole.log(\r\n  str.match(/\\bf\\w{1,}\\b/g)\r\n);\r\n\r\nconst h = `  the hello  world  !\r\n\r\n`\r\n\r\nconsole.log(\r\n  h.match(/\\s/g)\r\n);\r\n\r\nconsole.log(\r\n  h.replace(/\\s/g, '')\r\n);\r\n\r\nconst newStr = `\r\n010-1234-5678\r\ntheabcdef@abc.com\r\nhttps://www.omdbapi.com/?apikey=7035c60c&s=frozen\r\nThe quick brown fox jumps over the lazy dog.\r\nabbcccddd\r\n`\r\n\r\nconsole.log(\r\n  newStr.match(/.{1,}(?=@)/g)\r\n);\r\n\r\nconsole.log(\r\n  newStr.match(/(?<=@).{1,}/g)\r\n);"]}